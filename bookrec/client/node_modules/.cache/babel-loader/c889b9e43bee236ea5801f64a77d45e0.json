{"ast":null,"code":"var _jsxFileName = \"/Users/dewansunnah/Desktop/DBProject/bookrec/client/src/components/BookFilters.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookFilters = _ref => {\n  _s();\n\n  let {\n    onFilter\n  } = _ref;\n  const [titleText, setTitleText] = useState(\"\");\n  const [authorText, setAuthorText] = useState(\"\");\n  const [filterTitle, setFilterTitle] = useState(false);\n  const [filterAuthor, setFilterAuthor] = useState(false);\n  const [filterGenre, setFilterGenre] = useState(false);\n  const [filterAvailable, setFilterAvailable] = useState(false);\n  const [filterAll, setFilterAll] = useState(false);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!titleText) {\n      alert(\"please add a task\");\n      return;\n    }\n\n    onFilter({\n      titleText,\n      authorText,\n      reminder\n    });\n    setTitleText(\"\");\n    setAuthorText(\"\");\n    setFilterTitle(false);\n    setFilterAuthor(false);\n    setFilterGenre(false);\n    setFilterAvailable(false);\n    setFilterAll(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control form-control-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Set Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: reminder,\n          value: reminder,\n          onChange: e => setReminder(e.currentTarget.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control form-control-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Set Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: reminder,\n          value: reminder,\n          onChange: e => setReminder(e.currentTarget.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control form-control-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Set Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: reminder,\n          value: reminder,\n          onChange: e => setReminder(e.currentTarget.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control form-control-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Set Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: reminder,\n          value: reminder,\n          onChange: e => setReminder(e.currentTarget.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Save Task\",\n        className: \"btn btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookFilters, \"R/kIO+Pi1PqMncP4FuGxdwohIII=\");\n\n_c = BookFilters;\nexport default BookFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookFilters\");","map":{"version":3,"sources":["/Users/dewansunnah/Desktop/DBProject/bookrec/client/src/components/BookFilters.js"],"names":["useState","BookFilters","onFilter","titleText","setTitleText","authorText","setAuthorText","filterTitle","setFilterTitle","filterAuthor","setFilterAuthor","filterGenre","setFilterGenre","filterAvailable","setFilterAvailable","filterAll","setFilterAll","onSubmit","e","preventDefault","alert","reminder","setReminder","currentTarget","checked"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\n\nconst BookFilters = ({onFilter}) =>{\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [authorText, setAuthorText] = useState(\"\")\n    const [filterTitle, setFilterTitle] = useState(false)\n    const [filterAuthor, setFilterAuthor] = useState(false)\n    const [filterGenre, setFilterGenre] = useState(false)\n    const [filterAvailable, setFilterAvailable] = useState(false)\n    const [filterAll, setFilterAll] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!titleText){\n            alert(\"please add a task\")\n            return\n        }\n\n        onFilter({titleText, authorText,reminder})\n        setTitleText(\"\")\n        setAuthorText(\"\")\n        setFilterTitle(false)\n        setFilterAuthor(false)\n        setFilterGenre(false)\n        setFilterAvailable(false)\n        setFilterAll(false)\n    }\n\n    return(\n        <div className =\"container\"> \n            <form className=\"add-form\" onSubmit={onSubmit}>\n                \n                <div className=\"form-control form-control-check\">\n                    <label>Set Reminder</label>\n                    <input type=\"checkbox\" checked={reminder}\n                    value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n                </div>\n\n                <div className=\"form-control form-control-check\">\n                    <label>Set Reminder</label>\n                    <input type=\"checkbox\" checked={reminder}\n                    value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n                </div>\n\n                <div className=\"form-control form-control-check\">\n                    <label>Set Reminder</label>\n                    <input type=\"checkbox\" checked={reminder}\n                    value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n                </div>\n\n                <div className=\"form-control form-control-check\">\n                    <label>Set Reminder</label>\n                    <input type=\"checkbox\" checked={reminder}\n                    value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\n                </div>\n                <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"></input>\n            </form>\n\n        </div>\n    )\n}\n\nexport default BookFilters"]},"metadata":{},"sourceType":"module"}