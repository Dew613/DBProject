{"ast":null,"code":"var _jsxFileName = \"/Users/dewansunnah/Desktop/DBProject/bookrec/client/src/components/Book.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport BookTable from './BookTable';\nimport BooksHeader from './BooksHeader';\nimport Axios from \"axios\";\nimport './general.css';\nimport BookFilters from './BookFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Book = () => {\n  _s();\n\n  const [showAll, setShowAll] = useState(true);\n  const [books, setBooks] = useState([{\n    bookID: 1,\n    bookTitle: '\"13 1/2\"',\n    author: 'Barr Nevada',\n    bookCopies: 2,\n    libraryName: 'Central Library'\n  }]);\n  useEffect(() => {\n    const getBooks = async () => {\n      const data = await fetchBooks(); //console.log(data)\n    };\n\n    getBooks();\n  }, []);\n\n  const fetchBooks = async () => {\n    //console.log(\"this happens first\")\n    await Axios.get(\"http://localhost:3001/books\").then(response => {\n      setBooks(response.data);\n      return response.data;\n    });\n  };\n\n  const filterShow = async () => {\n    if (showAll) {\n      await Axios.get(\"http://localhost:3001/books/all\").then(response => {\n        setBooks(response.data);\n      });\n    } else {\n      await Axios.get(\"http://localhost:3001/books\").then(response => {\n        setBooks(response.data);\n      });\n    }\n\n    setShowAll(!showAll);\n  };\n\n  const newRandomBook = async () => {\n    console.log(\"Random Books happened\");\n    await Axios.get(\"http://localhost:3001/Filter/Random\").then(response => {\n      setBooks(response.data);\n      return response.data;\n    });\n  };\n\n  const filterBooks = async (filterTitle, titleText, filterAuthor, authorText, filterGenre, genreText, filterAvailable, filterAll) => {\n    console.log(\"filterTitle is: \", filterTitle);\n    await Axios.get(\"http://localhost:3001/Filter\", {\n      params: {\n        filterTitle: filterTitle,\n        titleText: titleText,\n        filterAuthor: filterAuthor,\n        authorText: authorText,\n        filterGenre: filterGenre,\n        genreText: genreText,\n        filterAvailable: filterAvailable,\n        filterAll: filterAll\n      }\n    }).then(response => {\n      setBooks(response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BooksHeader, {\n      showAll: !showAll,\n      onShow: filterShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BookFilters, {\n      onFilter: filterBooks,\n      onNewRandom: newRandomBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"onlyCenter\",\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), books.length > 0 ? /*#__PURE__*/_jsxDEV(BookTable, {\n      books: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this) : \"No Books To Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Book, \"W6jSYwxM4LOTDYhdMlo5ASdYXJA=\");\n\n_c = Book;\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["/Users/dewansunnah/Desktop/DBProject/bookrec/client/src/components/Book.js"],"names":["useState","useEffect","BookTable","BooksHeader","Axios","BookFilters","Book","showAll","setShowAll","books","setBooks","bookID","bookTitle","author","bookCopies","libraryName","getBooks","data","fetchBooks","get","then","response","filterShow","newRandomBook","console","log","filterBooks","filterTitle","titleText","filterAuthor","authorText","filterGenre","genreText","filterAvailable","filterAll","params","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport BookTable from './BookTable';\nimport BooksHeader from './BooksHeader';\nimport Axios from \"axios\";\nimport './general.css'\nimport BookFilters from './BookFilters';\n\n\nconst Book = () =>{\n    const [showAll, setShowAll] = useState(true)\n    const [books, setBooks] = useState([{\n      bookID: 1,\n      bookTitle: '\"13 1/2\"',\n      author: 'Barr Nevada',\n      bookCopies: 2,\n      libraryName: 'Central Library'\n    }]);\n\n    useEffect(() => { \n      const getBooks = async () => {\n          const data = await fetchBooks()\n          //console.log(data)\n      }\n      getBooks()\n    }, [])\n  \n    const fetchBooks = async() =>{\n      //console.log(\"this happens first\")\n      await Axios.get(\"http://localhost:3001/books\").then((response) => {\n        setBooks(response.data)\n        return response.data\n      })\n    }\n\n    const filterShow = async()=>{\n      if(showAll){\n        await Axios.get(\"http://localhost:3001/books/all\").then((response) => {\n         setBooks(response.data)\n        })\n      }\n      else{\n        await Axios.get(\"http://localhost:3001/books\").then((response) => {\n         setBooks(response.data)\n        })\n      }\n\n      setShowAll(!showAll)\n    }\n\n\n    const newRandomBook = async() =>{\n      console.log(\"Random Books happened\")\n      await Axios.get(\"http://localhost:3001/Filter/Random\").then((response) => {\n        setBooks(response.data)\n        return response.data\n      })\n    }\n\n    const filterBooks = async(filterTitle,titleText,filterAuthor, authorText, filterGenre, genreText, filterAvailable, filterAll) =>{\n      console.log(\"filterTitle is: \", filterTitle)\n      await Axios.get(\"http://localhost:3001/Filter\", \n      {params: {filterTitle: filterTitle, titleText: titleText, filterAuthor: filterAuthor, authorText: authorText, filterGenre: filterGenre, genreText: genreText, filterAvailable: filterAvailable, filterAll: filterAll }})\n      .then((response) => {\n        setBooks(response.data)\n       })\n    }\n\n\n\n\n  return (\n    <div>\n      <BooksHeader showAll = {!showAll} onShow={filterShow}/>\n      <BookFilters onFilter={filterBooks} onNewRandom={newRandomBook}/>\n    <h1 className = \"onlyCenter\">Book List</h1>\n    {books.length > 0 ? <BookTable books = {books}/> : \"No Books To Show\"}\n    </div>\n  );\n}\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}